<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>

    <!-- defaultModelType="flat" 设置复合主键时不单独为主键创建实体 -->
    <context id="MySql" defaultModelType="flat">

        <!--&lt;!&ndash; 生成的Java文件的编码 &ndash;&gt;-->
        <property name="javaFileEncoding" value="UTF-8"/>

        <!-- 在example类中增 offset和limit属性，并在mapper.xml的查询中加入limit ${offset} , ${limit} 提供在offset和limit>0时的查询 -->
        <plugin type="com.template.common.mybatis.MySQLLimitPlugin"></plugin>

        <!--注释-->
        <commentGenerator>
            <!-- 将数据库中表的字段描述信息添加到注释 -->
            <property name="addRemarkComments" value="true"/>
            <!-- 注释里不添加日期 -->
            <property name="suppressDate" value="true"/>
        </commentGenerator>
        <!-- 数据库连接，直接通过${}读取mybatisPom.xml里的配置 -->
        <jdbcConnection
                driverClass="${mybatis.generator.jdbcDrive}"
                connectionURL="${mybatis.generator.jdbcURL}"
                userId="${mybatis.generator.jdbcUserId}"
                password="${mybatis.generator.jdbcPassword}"/>
        <!-- java类型处理器
        用于处理DB中的类型到Java中的类型，默认使用JavaTypeResolverDefaultImpl；
        注意一点，默认会先尝试使用Integer，Long，Short等来对应DECIMAL和NUMERIC数据类型；
     -->
        <javaTypeResolver>
            <property name="useJSR310Types" value="true" />
        </javaTypeResolver>
        <!-- 生成POJO对象，并将类放到com.entity包下 -->
        <javaModelGenerator targetPackage="com.entity" targetProject="src/main/java"/>
        <!-- 生成mapper xml文件，并放到resources下的mapper文件夹下 -->
        <sqlMapGenerator targetPackage="com.repository" targetProject="src/main/resources/mybatis/mapper"/>

        <!-- table标签可以有多个，至少一个，tableName指定表名，可以使用_和%通配符,配置后面那些不会生成example -->
        <!--enableCountByExample="false" enableDeleteByExample="false" -->
        <!--enableSelectByExample="false" enableUpdateByExample="false" -->
        <table tableName="book">
        </table>
        <table tableName="tbl_user" domainObjectName="User">
            <!--<columnOverride column="description" javaType="java.sql.Blob"/>-->
        </table>
        <table tableName="teacher" domainObjectName="Teacher">
            <columnOverride column="clazz" javaType="java.lang.Integer"/>
            <columnOverride column="birthday" javaType="java.time.LocalDate"/>
        </table>

    </context>
</generatorConfiguration>


